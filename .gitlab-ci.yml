variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"


stages:
  - build
  - deploy


build_assets:
  stage: build
  image: node:13.5.0
  before_script:
    - yarn config set cache-folder .yarn
    - yarn install
  cache:
    paths:
      - node_modules/
      - .yarn
  artifacts:
    paths:
      - public/build
  script:
    - echo "Building"
    - yarn run build

deploy:
  stage: deploy
  needs:
    - job: build_assets
      artifacts: true
  image: node:13.5.0
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$PROD_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $PROD_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  only:
    - master
  script:
    - echo "Uploading build artifacts"
    - scp -P22 -r package.json $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE
    - scp -P22 -r yarn.lock $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE
    - scp -P22 -r composer.json $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE
    - scp -P22 -r composer.lock $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE
    - scp -P22 -r symfony.lock $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE
    - scp -P22 -r public/* $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE/public
    - scp -P22 -r src/* $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE/src
    - scp -P22 -r bin/* $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE/bin
    - scp -P22 -r config/* $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE/config
    - scp -P22 -r templates/* $PROD_USER@$PROD_HOST:$CI_PROJECT_TITLE/templates
    - ssh -p22 $STAGING_USER@$STAGING_HOST "cd $CI_PROJECT_TITLE && composer install"
    - ssh -p22 $STAGING_USER@$STAGING_HOST "cd $CI_PROJECT_TITLE && yarn install"
    - ssh -p22 $STAGING_USER@$STAGING_HOST "cd $CI_PROJECT_TITLE && bin/console cache:clear --env=prod"
